#!/usr/bin/awk -f

# Print header at beginning
BEGIN {
	if(mode == "mk") {
		comment = "# %s\n"
		define = "%s = %s\n"
		undef = ""
		startif = "ifeq ($(%s), %s)\n"
		endif = "endif\n"
	}
	else if(mode == "h") {
		comment = "// %s\n"
		define = "#define %s %s\n"
		undef = "#undef %s\n"
		startif = "#ifdef %2$s\n"
		endif = "#endif\n"

		print "#ifndef CONFIG_H"
		print "#define CONFIG_H"
	}
	else {
		exit 1
	}

	printf comment, "Autogenerated, don't modify"
	filenum = 0
}

# Print footer at the end
END {
	if(board != "")
		printf endif

	if(mode == "h") {
		print ""
		printf endif
	}
}

# Reset section and board when we start reading a new file
FNR == 1{
	section = ""
	board = ""
	filenum++

	print ""
	printf comment, FILENAME
	print ""
}

# Ignore lines beginning with # or ;
/^[#;]/ {
	next
};

# Non board specific section headers
/^\[[^.]+\]$/ {
	gsub(/[\[\] ]*/, "")
	section = toupper($0) "_"

	if(board != "")
		printf endif

	board = ""
	print ""
	printf comment, "Section " $0
};

# Board specific section headers
/^\[.+\..+\]$/ {
	gsub(/[\[\] ]*/, "")
	split($0, parts, ".")

	if(board != "")
		printf endif

	section = toupper(parts[2]) "_"
	board = parts[1]

	if(mode == "h")
		gsub("-", "_", board)

	print ""
	printf comment, "Section " parts[2] " for board " board
	printf startif, "BOARD", board
};

# key = value lines
/.*=.*/ {
	split($0, parts, "=")
	key = parts[1]
	value = parts[2]

	gsub(/(^ *)|( *$)/, "", key)
	gsub(/[#;].*$/, "", value)
	gsub(/(^ *)|( *$)/, "", value)

	if(( board != "" ) || (filenum > 1))
		printf undef, "CONFIG_" section toupper(key)

	printf define, "CONFIG_" section toupper(key), value
}